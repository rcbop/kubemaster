name: CICD

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  check-for-changes:
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.check-app-changes.outputs.changes }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for changes in app/ directory
        id: check-app-changes
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^app/'; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    runs-on: ubuntu-latest
    needs: check-for-changes
    if: needs.check-for-changes.outputs.changes == 'true'

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Read current version
        id: read-version
        run: echo "version=$(cat .current_version)" >> $GITHUB_OUTPUT

      - name: Determine new version
        id: determine-version
        run: |
          pip install semver
          if grep -q PATCH <<< "${{ github.event.head_commit.message }}"; then
            echo "version=$(python ./bump_version.py PATCH ${{ steps.read-version.outputs.version }})" >> $GITHUB_OUTPUT
          elif grep -q MINOR <<< "${{ github.event.head_commit.message }}"; then
            echo "version=$(python ./bump_version.py MINOR ${{ steps.read-version.outputs.version }})" >> $GITHUB_OUTPUT
          elif grep -q MAJOR <<< "${{ github.event.head_commit.message }}"; then
            echo "version=$(python ./bump_version.py MAJOR ${{ steps.read-version.outputs.version }})" >> $GITHUB_OUTPUT
          else
            echo version=${{ steps.read-version.outputs.version }} >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: |
            ghcr.io/rcbop/my-nginx-server

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: app
          push: true
          tags: ghcr.io/rcbop/my-nginx-server:${{ steps.determine-version.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Deploy to DEV
        run: |
          for kustomization in $(find k8s/dev -name kustomization.yaml); do
            dir=$(dirname $kustomization)
            cd $dir
            kustomize edit set image my-nginx-server=ghcr.io/rcbop/my-nginx-server:${{ steps.determine-version.outputs.version }}
            cd -
          done

      - name: Persist new version
        run: echo "${{ steps.determine-version.outputs.version }}" > .current_version

      - name: Commit version change
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add .
          git commit -m "Bump version to ${{ steps.determine-version.outputs.version }}"
          git push origin main